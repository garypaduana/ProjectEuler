/*
    Project Euler Solutions
    Copyright (C) 2012-2013, Gary Paduana, gary.paduana@gmail.com
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package com.gp.projecteuler.problems;

import java.math.BigInteger;
import java.util.Set;
import java.util.TreeSet;

import com.gp.projecteuler.CommonMath;

/**
	Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <=  b <= 5:
	
		2^2=4, 2^3=8, 2^4=16, 2^5=32
		3^2=9, 3^3=27, 3^4=81, 3^5=243
		4^2=16, 4^3=64, 4^4=256, 4^5=1024
		5^2=25, 5^3=125, 5^4=625, 5^5=3125
		
	If they are then placed in numerical order, with any repeats removed
	we get the following sequence of 15 distinct terms:
	
	4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
	
	How many distinct terms are in the sequence generated by a^b for
	2 <= a <= 100 and 2 <= b <= 100?
 */
public class Problem029 {

	public static void main(String[] args) {
		Set<BigInteger> set = new TreeSet<BigInteger>();
		
		for(int a = 2; a <= 100; a++){
			for(int b = 2; b <= 100; b++){
				set.add(CommonMath.pow(BigInteger.valueOf(a), BigInteger.valueOf(b)));
			}
		}
		
		System.out.println("Answer: " + set.size());
	}
	
	
}
