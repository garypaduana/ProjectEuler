/*
    Project Euler Solutions
    Copyright (C) 2012-2013, Gary Paduana, gary.paduana@gmail.com
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package com.gp.projecteuler.problems;

import java.util.Set;
import java.util.TreeSet;

/**
	Triangle, pentagonal, and hexagonal numbers are generated by the
	following formulae:
	
	Triangle	 	T(n)=n(n+1)/2	 	1, 3, 6, 10, 15, ...
	Pentagonal	 	P(n)=n(3n-1)/2	 	1, 5, 12, 22, 35, ...
	Hexagonal	 	H(n)=n(2n-1)	 		1, 6, 15, 28, 45, ...
	
	It can be verified that T(285) = P(165) = H(143) = 40755.
	
	Find the next triangle number that is also pentagonal and hexagonal.
 */
public class Problem045 {

	public static void main(String[] args) {
		Set<Long> pentagonal = new TreeSet<Long>();
		Set<Long> hexagonal = new TreeSet<Long>();
		
		long i = 0;
		
		while(true){
			long hex = i * (2 * i - 1);
			hexagonal.add(hex);
			
			long pent = i * (3 * i - 1) / 2;
			pentagonal.add(pent);
			
			long tri = i * (i + 1) / 2;

			if(pentagonal.contains(tri) && hexagonal.contains(tri) &&
				tri > 40755){
				System.out.println("Answer: " + tri);
				break;
			}
			i++;
		}
	}
}
